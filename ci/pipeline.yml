# TO DO: add a working directory option that enables a static copy of the source to be available to the entire pipeline

jobs:
  - name: build
    serial_groups: [ version ]
    plan:
      - get: source
        trigger: true
      - get: serverless-image
        trigger: true
      - get: version
        params: { pre: rc }
      - task: unit-test
        file: source/ci/tasks/unit.yml

  - name: package
    serial: true
    plan:
      - get: source
        trigger: true
        passed: [build]
      - get: version
        passed: [ build ]
      - put: serverless-package
        params:
          service: source
      - task: pack
        file: source/ci/tasks/pack.yml
        params: { base_name: ((application)) }
      - put: candidate-release
        params: { file: archive/((application))-*.tgz }
      - put: version
        params:
          file: version/number

  - name: integration
    serial: true
    plan:
      - get: candidate-release
        trigger: true
        passed: [ package ]
      - get: source
        passed: [ package ]
      - get: version
        passed: [ package ]
      - task: unpack
        file: source/ci/tasks/unpack.yml
      - put: serverless-deployment
        params:
          stage: integration
          deploy: true
          package: unpacked
      # - task: integration-test
      #   file: source/ci/tasks/integration.yml


resources:
  - name: source
    type: git
    source:
      uri: ((github-uri))
      branch: ((github-branch))

  - name: version
    type: semver
    source:
      bucket: ((s3-bucket-version))
      initial_version: 1.0.0-rc.0
      key: current-version
      access_key_id: ((aws-access-key-id))
      secret_access_key: ((aws-secret-access-key))
      region_name: ((aws-region))
      endpoint: ((s3-endpoint))
      sse-kms-key-id: ((s3-sse-kms-key-id))

  - name: candidate-release
    type: s3
    source:
      bucket: ((s3-bucket-release-candidates))
      regexp: ((application))-(.*).tgz
      access_key_id: ((aws-access-key-id))
      secret_access_key: ((aws-secret-access-key))
      region_name: ((aws-region))
      endpoint: ((s3-endpoint))
      sse-kms-key-id: ((s3-sse-kms-key-id))

  - name: serverless-package
    type: serverless
    source:
      access_key_id: ((aws-access-key-id))
      secret_access_key: ((aws-secret-access-key))
      package: ((application))

  - name: serverless-deployment
    type: serverless
    source:
      access_key_id: ((aws-access-key-id))
      secret_access_key: ((aws-secret-access-key))
      package: ((application))
      deploy: true

  - name: serverless-image
    type: docker-image
    source:
      repository: crdant/serverless-resource

resource_types:
  - name: serverless
    type: docker-image
    source:
      repository: crdant/serverless-resource
